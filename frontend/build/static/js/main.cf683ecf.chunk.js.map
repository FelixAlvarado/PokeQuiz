{"version":3,"sources":["utility/fetch.js","app/quizesSlice.js","utility/util.js","components/QuizItem.js","components/QuizList.js","components/Nav.js","components/ScoreList.js","components/alertModal.js","components/QuizPage.js","components/AttemptItem.js","components/ScorePage.js","utility/quizMethods.js","components/CreatePage.js","components/TestPage.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["host","axios","require","window","origin","includes","fetchQuiz","id","get","then","response","data","quiz","fetchQuizAttempt","console","log","catch","error","fetchQuestions","getQuizes","createAsyncThunk","a","quizes","getQuiz","getQuizAttempt","getQuestions","quizesSlice","createSlice","name","initialState","reducers","addQuiz","state","action","Object","assign","payload","extraReducers","fulfilled","actions","selectQuizes","receiveQuiz","pokePicture","index","Math","floor","random","toString","averageScore","scores","length","total","forEach","score","gradeQuiz","questions","answers","correct","quizLength","keys","key","answer","correct_answer","QuizItem","useState","picture","setPicture","onLoad","useRef","useEffect","current","to","className","alt","src","title","QuizList","quizList","useSelector","dispatch","useDispatch","values","reverse","map","i","Nav","ScoreList","scoreList","quizId","findWidthBase","widthBase","setWidthBase","barColor","width","innerWidth","scoreWidthPercent","margin","setWidth","style","marginRight","backgroundColor","addEventListener","removeEventListener","AlertModal","showAlert","alertText","show","setShowAlert","onclick","event","modalElement","document","getElementById","target","QuizPage","location","href","split","icon","faCopy","copyIcon","setCopyIcon","useLocation","setAlertText","handleClick","e","preventDefault","select","execCommand","faCheckCircle","justCreated","test","navigator","userAgent","alert","defaultValue","onClick","size","handleAlert","AttemptItem","attempt","question","handleAnswer","wrongAnswer","faCheck","faTimes","wrong_answer1","wrong_answer2","wrong_answer3","ScorePage","questionList","scoreId","attempts","justScored","currentAttempt","currentQuestion","question_id","CreatePage","questionForm","setTitle","questionObject","correctAnswer","wrongAnswer1","wrongAnswer2","wrongAnswer3","0","1","setQuestions","setIndex","boolean","newQuiz","setNewQuiz","handleChange","keyword","counter","newId","value","currentTarget","newObject","innerHTML","handleSubmit","unfilled","wrongInput","push","questionNumber","parseInt","toLowerCase","alertString","input","post","createQuiz","setTimeout","pathname","handleRedirect","onChange","placeholder","newIndex","removeQuestion","faMinus","newState","addQuestion","faPlus","TestPage","setName","setAttempts","quizSubmitted","setQuizSubmitted","scoreQuiz","testTaker","score_id","handleSelect","questionId","test_questions","answer_1","type","answer_2","answer_3","answer_4","App","path","configureStore","reducer","quizesReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","store","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf683ecf.chunk.js","sourcesContent":["const axios = require('axios');\n\nlet host \n\nif(window.origin.includes(\"herokuapp\")){\n    host = \"https://pokequiz1.herokuapp.com\"\n}else if (window.origin.includes(\":5000\")) {\n    host = \"http://localhost:5000\"\n} else {\n    host = \"http://127.0.0.1:8000\"\n}\n\nexport const fetchQuizes = () => {\n    return axios.get(`${host}/quizes`).then(response =>{\n        return response.data.quizes\n    })\n}\n\nexport const fetchQuiz = (id) => {\n    return axios.get(`${host}/quiz?id=${id}`).then(response =>{\n        return response.data.quiz\n    })\n}\n\nexport const fetchQuizAttempt = (id) => {\n    console.log('attempting to fetch quiz attempt data')\n    return axios.get(`${host}/attempt?id=${id}`).then(response =>{\n        console.log('here is the fetch quiz attempt response', response)\n        return response.data\n    }).catch(error =>{\n        console.log('error occurred on server side with fetch quiz attempt call', error)\n    })\n}\n\nexport const fetchQuestions = (id) => {\n    return axios.get(`${host}/questions?id=${id}`).then(response =>{\n        return response.data\n    })\n}\n\n\n\n  \n\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {fetchQuizes, fetchQuiz, fetchQuizAttempt, fetchQuestions} from '../utility/fetch'\n\nexport const getQuizes = createAsyncThunk(\n    'quiz/fetchQuizesStatus',\n    async (id) => {\n      const response = await fetchQuizes(id)\n      return response\n    \n    }     \n  )\n\n  //fetches quiz data for quiz page\n  export const getQuiz = createAsyncThunk(\n    'quiz/fetchQuizStatus',\n    async (id) => {\n      const response = await fetchQuiz(id)\n      return response\n    \n    }     \n  )\n\n  //fetches questions and attempt data for the quiz associated with the score id\n  export const getQuizAttempt = createAsyncThunk(\n    'quiz/fetchQuizStatus',\n    async (id) => {\n      const response = await fetchQuizAttempt(id)\n      return response\n    \n    }     \n  )\n\n  //fetches questions for test page\n  export const getQuestions = createAsyncThunk(\n    'quiz/fetchQuizStatus',\n    async (id) => {\n      const response = await fetchQuestions(id)\n      return response\n    \n    }     \n  )\n\n\n\nexport const quizesSlice = createSlice({\n  name: 'quizes',\n  initialState: {},\n        reducers:{addQuiz: (state, action) => {\n          Object.assign(state,action.payload)\n        }},\n        extraReducers:{\n        [getQuizes.fulfilled]: (state, action) => {\n            Object.assign(state,action.payload)\n        },\n        [getQuiz.fulfilled]: (state, action) => {\n          Object.assign(state,action.payload)\n      },\n        [getQuizAttempt.fulfilled]: (state, action) => {\n           Object.assign(state,action.payload)\n    },\n    [getQuestions.fulfilled]: (state, action) => {\n       Object.assign(state,action.payload)\n}\n\n  },\n});\n\nexport const { addQuiz } = quizesSlice.actions;\n\n\nexport const { receiveQuiz } = quizesSlice.actions;\n\nexport const selectQuizes = state => state.quizes;\n\nexport default quizesSlice.reducer;","\nexport const pokePicture = () => {\n    let index = Math.floor(Math.random() * 721) + 1\n    index = index.toString()\n    return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${index}.png`\n}\n\nexport const averageScore = (scores) => {\n\n\n    if(!scores || scores.length === 0){\n      return 'N/A'\n    }\n\n    let total = 0;\n\n    scores.forEach(score =>{\n      total += score[1]\n    })\n\n    return Math.floor(total / scores.length).toString() + '%'\n}\n\nexport const gradeQuiz = (questions, answers) => {\n  let correct = 0;\n  let quizLength = Object.keys(questions).length\n\n  Object.keys(answers).forEach(key =>{\n    if(answers[`${key}`].answer === questions[`${key}`].correct_answer){\n      correct += 1\n    }\n  }); \n\n  return Math.floor((correct / quizLength) * 100)\n\n}\n","import React, { useEffect, useState, useRef} from 'react';\nimport '../style/quizesview.css'\nimport {pokePicture, averageScore} from '../utility/util'\nimport {Link} from \"react-router-dom\";\n\nexport default function QuizItem({quiz}) {\n  const [picture, setPicture] = useState('')\n  const onLoad = useRef(true)\n\n  function handleImage(){\n    if (picture.length > 0){\n      return(\n        <img alt=\"pokemon\" src={picture} className=\"picture\"/>\n      )\n    } else {\n      return(\n        <div className=\"picture\"></div>\n      )\n    }\n  }\n\n  useEffect(() => {\n    if(onLoad.current){\n      setPicture(pokePicture())\n      onLoad.current = false;\n    }\n  },[onLoad]);\n\n  return (\n    <Link to={`/quiz/${quiz.id}`} className=\"quiz-item\">\n        {handleImage()}\n        <div><h2>{quiz.title}</h2></div>\n        <div>\n          <h3>Average Score: {averageScore(quiz.scores)}</h3>\n        </div>\n    </Link>\n\n  );    \n}","import React, { useEffect, useRef } from 'react';\nimport { getQuizes, selectQuizes } from '../app/quizesSlice.js'\nimport { useSelector, useDispatch } from 'react-redux';\nimport QuizItem from './QuizItem'\n\nexport default function QuizList() {\n    const quizes = useSelector(selectQuizes)\n    const dispatch = useDispatch();\n    const onLoad = useRef(true)\n    let quizList\n\n  useEffect(() => {\n    if(onLoad.current){\n      dispatch(getQuizes());\n      onLoad.current = false;\n    }\n  });\n\n  if(quizes) { \n          quizList = Object.values(quizes).reverse().map((quiz, i) =>{\n            if(quiz.title){\n              return <QuizItem key={i} quiz={quiz} />\n            }else{\n              return\n            }\n      })\n\n      // let array = Object.values(quizes);\n      // array = array.concat(array);\n      // array = array.concat(array);\n\n    // quizList = array.map((quiz, i) =>{\n    //       return <QuizItem key={i} quiz={quiz} />\n    //   })\n  }\n\n  return (\n    <div className=\"quiz-list\">\n        {quizList}\n    </div>\n  );    \n}","import React from 'react';\nimport '../style/nav.css'\nimport {Link} from \"react-router-dom\";\n\nexport default function Nav() {\n\n  return (\n    <div className=\"nav-bar\">\n      <Link to=\"/\"><div className='logo' ></div></Link>\n      <Link to=\"/create\"><button className='create-quiz-button'>Create Quiz</button></Link>\n    </div>\n  );    \n}\n","import React, { useState, useEffect} from 'react';\nimport '../style/scorelist.css'\nimport {averageScore} from '../utility/util'\nimport {Link} from \"react-router-dom\";\n\n\n\nexport default function ScoreList({scores, quizId}) {\n    let scoreList \n    //sets width of bars based on window height\n    const [widthBase, setWidthBase] = useState(findWidthBase())\n    \n    function barColor(score) {\n        if (score > 50){\n            return \"#4dff4d\"\n        } else if (score <= 50 && score > 20) {\n            return \"#ffdb4d\"\n        } else {\n            return \"#ff1a1a\"\n        }\n    }\n\n    function findWidthBase(){\n        let width = window.innerWidth\n        if(width < 330){\n            return 10\n        }else if(width < 400) {\n            return 15\n        } else if (width < 565) {\n            return 25\n        } else if (width < 705) {\n            return 35\n        } else {\n            return 45\n        }\n\n    }\n\n    function scoreWidthPercent(score){\n        return (score / 100 * widthBase).toString() + '%'\n    }\n\n    function margin(score) {\n        return (widthBase - (score / 100 * widthBase)).toString() + '%'\n\n    }\n\n\n    if (scores) {\n        scoreList = scores.map((score,i)=>{\n            return (\n                <div className=\"score-info\" key={i}>\n                    <span>{score[0]}</span>\n                    <div className=\"score-bar\" style={{width: `${scoreWidthPercent(score[1])}`, marginRight: `${margin(score[1])}`, backgroundColor: `${barColor(score[1])}`}}></div>\n                    <span>{score[1]}</span>\n                    <Link to={`/score/${score[2]}?quiz=${quizId}`}><button className=\"attempt-button\">Attempt</button></Link>\n                </div>\n            )\n        })\n    }\n\n    function setWidth(){\n        setWidthBase(findWidthBase())\n    }\n\n    function handleScoreAverage() {\n        if(scores && scores.length > 0){\n            return <p className=\"score-average\">Average Score: {averageScore(scores)}</p>;\n        }else{\n            return <p className=\"score-average\">No one has taken this quiz yet</p>;\n        }\n    }\n\n    useEffect(() => {\n\n            window.addEventListener(\"resize\", setWidth)\n\n        return function cleanup()  {\n\n            window.removeEventListener('resize', setWidth)\n      }\n    });\n\n  return (\n      <div className=\"score-list\">\n        <p>Scores</p>\n        {handleScoreAverage()}\n        <br></br>\n        {scoreList}\n      </div>\n  );    \n}\n","import React, {useEffect, useState} from \"react\";\nimport '../style/alertmodal.css';\n\nexport default function AlertModal({ showAlert, alertText}) {\n  const [show, setShowAlert] = useState(true)\n\n\n  useEffect(() =>{\n    window.onclick = function(event) {\n        let modalElement = document.getElementById('alertModalBackground');\n        if (showAlert && event.target === modalElement) {\n            setShowAlert(false)\n          }\n        }\n  })\n\n    return (\n      <div id=\"alertModalBackground\" className={`${show ? \"modal-background\" : \"hidden\"}`}>\n         <div className={`${show ? \"alert-modal\" : \"hidden\"}`}>\n            <p >{alertText}</p>\n        </div>\n      </div>\n  );\n}","import React, { useRef, useEffect, useState } from 'react';\nimport { getQuiz  } from '../app/quizesSlice.js'\nimport { useSelector, useDispatch } from 'react-redux';\nimport '../style/quizpage.css'\nimport {pokePicture} from '../utility/util'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCopy, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\nimport ScoreList from './ScoreList'\nimport {Link, useLocation} from \"react-router-dom\";\nimport AlertModal from './alertModal.js'\n\n\nexport default function QuizPage() {\n  const dispatch = useDispatch();\n  let id = window.location.href.split('/')[4]\n  const onLoad = useRef(true)\n  const [picture, setPicture] = useState('')\n  const [copyIcon, setCopyIcon] = useState({icon:faCopy,className:\"copy-icon\"})\n  let location = useLocation()\n  let [showAlert, setShowAlert] = useState(false)\n  let [alertText, setAlertText] = useState('');\n\n\n  const quiz = useSelector(state => {\n    if(state.quizes[`${id}`]){\n    return state.quizes[`${id}`]\n    }else{\n      return {}\n    }\n  })\n\n  const title = quiz ? quiz.title : ''\n\n  // function reFetch(state){\n  //   console.log('made it to refetch for quiz page')\n  //   if(!!state.quizes[`${id}`]){\n  //     console.log('re fetching for quiz page')\n  //     dispatch(getQuiz(id))\n  //   }\n  // }\n\n  function handleImage(){\n    if (picture.length > 0){\n      return(\n        <img alt=\"pokemon\" src={picture} className=\"page-picture\"/>\n      )\n    } else {\n      return(\n        <div className=\"page-picture\"></div>\n      )\n    }\n  }\n\n  function handleClick(e) {\n    e.preventDefault()\n    let text = document.getElementById(\"currentLink\")\n    text.select()\n    document.execCommand(\"copy\")\n    setCopyIcon({icon:faCheckCircle,className:\"copy-icon2\"})\n  }\n\n  function handleAlert(){\n    if(showAlert){\n      return <AlertModal showAlert={showAlert} alertText={alertText}/>\n\n    }\n  }\n\n\nuseEffect(() => {\n\n  if(onLoad.current){\n    dispatch(getQuiz(id))\n    setPicture(pokePicture())\n    if(location.state && location.state.justCreated){\n      if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\n        alert(\"Your quiz was successfully created! Share this page's link with your friends to see how they score!\")\n      }else{\n        setAlertText(\"Your quiz was successfully created! Share this page's link with your friends to see how they score!\")\n        setShowAlert(true)\n      }\n    }\n    onLoad.current = false;\n  }\n},[dispatch,id, location.state]);\n\n  return (\n\n    <div className=\"page-holder\">\n      <div className=\"page-top-section\">\n        {handleImage()}\n          <div className=\"page-top-right\">\n            <div className=\"page-title\"><div>{title}</div></div>\n              <div className=\"link-button-holder\">\n              <Link to={`/test/${id}`} className=\"quiz-button\">Take Quiz</Link>\n              <div className=\"page-link-holder\">\n                <input id=\"currentLink\" defaultValue={window.location.href}/>\n                <FontAwesomeIcon onClick={(e) => handleClick(e)} className=\"copy-icon\" icon={copyIcon.icon} size=\"lg\" />\n              </div>\n            </div>\n          </div>\n      </div>\n      <Link to={`/test/${id}`} className=\"quiz-button2\"><span>Take Quiz</span></Link>\n      <button onClick={(e) => handleClick(e)} className=\"copy-link\">Copy Link</button>\n      <ScoreList scores={quiz.scores} quizId={quiz.id} />\n      {handleAlert()}\n    </div>\n\n\n  );    \n}\n","import React from 'react';\nimport '../style/scorepage.css'\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\n\n\nexport default function AttemptItem({attempt, question}) {\n    function handleIcon(){\n        if(attempt.answer === question.correct_answer){\n            return <FontAwesomeIcon className=\"right\" icon={faCheck} size=\"lg\" />\n        } else {\n            return <FontAwesomeIcon className=\"wrong\" icon={faTimes} size=\"lg\" />\n        }\n    }\n\n    function handleAnswer(wrongAnswer){\n        if(wrongAnswer !== attempt.answer){\n            return <div>{wrongAnswer}</div>\n        } else {\n            return <div><mark className=\"incorrect\">{wrongAnswer}</mark></div>\n        }\n    }\n\n  return (\n   \n <div className=\"question-holder\">\n    <div className=\"question\">\n        {handleIcon()}<div>{question.question}</div>\n    </div>\n        <mark className=\"correct\">{question.correct_answer}</mark>\n        {handleAnswer(question.wrong_answer1)}\n        {handleAnswer(question.wrong_answer2)}\n        {handleAnswer(question.wrong_answer3)}\n    \n</div>\n  );    \n}","import React,{ useState, useRef, useEffect } from 'react';\nimport '../style/scorepage.css'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getQuizAttempt  } from '../app/quizesSlice.js'\nimport {pokePicture} from '../utility/util'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCopy, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\nimport AttemptItem from './AttemptItem'\nimport {Link, useLocation} from \"react-router-dom\";\nimport AlertModal from './alertModal.js'\n\nexport default function ScorePage() {\n    const dispatch = useDispatch();\n    let scoreId = window.location.href.split('/')[4].split('?')[0]\n    let quizId =  window.location.href.split('=')[1]\n    const onLoad = useRef(true)\n    const [picture, setPicture] = useState('')\n    const [copyIcon, setCopyIcon] = useState({icon:faCopy,className:\"copy-icon\"})\n    let questionList\n    let location = useLocation()\n    let [showAlert, setShowAlert] = useState(false)\n    let [alertText, setAlertText] = useState('');\n\n\n \n    const quiz = useSelector(state => {\n      if(state.quizes[`${quizId}`] && state.quizes[`${quizId}`].attempts){\n      return state.quizes[`${quizId}`]\n      }else{\n        // setTimeout(refresh(state),750)\n        return {scores:[[]]}\n      }\n    })\n\n    function refresh(state){\n      if(!!state.quizes[`${quizId}`]){\n       dispatch(getQuizAttempt(scoreId))\n            }\n    }\n\n    function handleClick(e) {\n      e.preventDefault()\n      let text = document.getElementById(\"currentLink\")\n      text.select()\n      document.execCommand(\"copy\")\n      setCopyIcon({icon:faCheckCircle,className:\"copy-icon2\"})\n    }\n\n    function handleImage(){\n      if (picture.length > 0){\n        return(\n          <img alt=\"pokemon\" src={picture} className=\"page-picture\"/>\n        )\n      } else {\n        return(\n          <div className=\"page-picture\"></div>\n        )\n      }\n    }\n\n    function handleAlert(){\n      if(showAlert){\n        return <AlertModal showAlert={showAlert} alertText={alertText}/>\n  \n      }\n    }\n\n    useEffect(() => {\n      if(onLoad.current){\n        dispatch(getQuizAttempt(scoreId))\n        setPicture(pokePicture())\n        if(location.state && location.state.justScored){\n          if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\n            alert(`You scored ${location.state.score}%! You can view your answers on this page. Share this page with the quiz creater so they can see how you did!`)\n          }else{\n            setAlertText(`You scored ${location.state.score}%! You can view your answers on this page. Share this page with the quiz creater so they can see how you did!`)\n            setShowAlert(true)\n          }\n        }\n        onLoad.current = false;\n      }\n    },[dispatch,scoreId, location.state]);\n\n    if(quiz.attempts && quiz.questions){\n      questionList = Object.keys(quiz.attempts).map((key,i) =>{\n        let currentAttempt = quiz.attempts[`${key}`]\n        let currentQuestion = quiz.questions[`${currentAttempt.question_id}`]\n        return <AttemptItem key={i} attempt={currentAttempt} question={currentQuestion} />\n      });\n    }\n\n  return (\n  \n<div className=\"page-holder\">\n      <div className=\"page-top-section\">\n        {handleImage()}\n          <div className=\"page-top-right\">\n            <div className=\"page-title\"><div>{quiz.title}</div></div>\n              <div className=\"link-button-holder\">\n              <Link className=\"quiz-button\" to={`/quiz/${quizId}`}>Quiz Page</Link>\n              <div className=\"page-link-holder\">\n                <input id=\"currentLink\" defaultValue={window.location.href}/>\n                <FontAwesomeIcon onClick={(e) => handleClick(e)} className=\"copy-icon\" icon={copyIcon.icon} size=\"lg\" />\n              </div>\n            </div>\n          </div>\n      </div>\n      <Link className=\"quiz-button2\" to={`/quiz/${quizId}`}><span>Quiz Page</span></Link>\n      <button onClick={(e) => handleClick(e)} className=\"copy-link\">Copy Link</button>\n      <div className=\"score-info-holder\">\n        <div>Testee: {quiz.scores[0][0]}</div>\n        <div>Score: {quiz.scores[0][1]}</div>\n      </div>\n      <div className=\"questions\">\n        <div className=\"result-title\">Results</div>\n        {questionList}\n      </div>\n      {handleAlert()}\n</div>\n  );    \n}","const axios = require('axios');\n\nlet host \n\nif(window.origin.includes(\"herokuapp\")){\n    host = \"https://pokequiz1.herokuapp.com\"\n}else if (window.origin.includes(\":5000\")) {\n    host = \"http://localhost:5000\"\n} else {\n    host = \"http://127.0.0.1:8000\"\n}\n\n\nexport const createQuiz = (title, questions) => {\n    return axios.post(`${host}/create`,{\n        title: title,\n        questions: questions\n        }).then(response =>{\n            return response.data\n        })\n\n}\n\nexport const scoreQuiz = (attempts, score) => {\n    return axios.post(`${host}/score`,{\n        attempts: attempts,\n        score: score\n        }).then(response =>{\n            return response.data\n        })\n\n}","import React, {useState} from 'react';\nimport '../style/createpage.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons'\nimport {createQuiz} from '../utility/quizMethods'\nimport {Redirect} from 'react-router-dom'\n\nexport default function CreatePage() {\n\n  const [title, setTitle] = useState('')\n  const questionObject = {question:'', correctAnswer:'', wrongAnswer1:'', wrongAnswer2:'', wrongAnswer3:''}\n  const [questions, setQuestions] = useState({0:Object.assign({},questionObject), 1:Object.assign({},questionObject)})\n  const [index, setIndex] = useState(1)\n  const [newQuiz, setNewQuiz] = useState({boolean: false,id:''})\n  let questionForm\n\n  function removeQuestion(e){\n    e.preventDefault();\n    if(index < 2){\n      return\n    }\n    let newObject = Object.assign({},questions)\n    delete newObject[`${index}`]\n    let newIndex = index - 1 \n    setQuestions(newObject)\n    setIndex(newIndex)\n  }\n\n  function addQuestion(e) {\n    e.preventDefault();\n    if(index > 8){\n      return\n    } \n    let newIndex = index + 1\n    let newObject = {}\n    newObject[`${newIndex}`] = {question:'', correctAnswer:'', wrongAnswer1:'', wrongAnswer2:'', wrongAnswer3:''}\n    let newState = Object.assign(questions, newObject)\n    setQuestions(newState)\n    setIndex(newIndex)\n    return\n  }\n\n  function handleChange(e,keyword, id){\n\n    let counter\n\n    if(typeof id == 'number'){\n      let newId = id.toString() + keyword\n      counter = document.getElementById(newId)\n    } else {\n      counter = document.getElementById(keyword)\n    }\n\n    let value = e.currentTarget.value \n    if (value.length === 0) value = ''\n\n    let newObject = Object.assign({},questions)\n\n    switch(keyword) {\n      case 'title':\n        if(value.length > 22){\n          e.currentTarget.value = title \n          break;\n        }\n        counter.innerHTML = value.length.toString() + \"/22\"\n        setTitle(value)\n        break;\n      case 'question':\n        if(value.length > 150){\n          e.currentTarget.value = questions[`${id}`].question \n          break;\n        }\n        counter.innerHTML = value.length.toString() + \"/150\"\n        newObject[`${id}`].question = value \n        setQuestions(newObject)\n        break;\n      default:\n        if(value.length > 100){\n          e.currentTarget.value = questions[`${id}`][`${keyword}`] \n          break;\n        }\n        counter.innerHTML = value.length.toString() + \"/100\"\n        newObject[`${id}`][`${keyword}`]  = value \n        setQuestions(newObject)\n        break;\n        \n    }\n\n    return;\n  }\n\n  function handleSubmit(e)  {\n    e.preventDefault()\n    let unfilled = []\n    let wrongInput = false\n    if (title.length === 0) unfilled.push('Title')\n    Object.keys(questions).forEach(index => {\n      let questionNumber = parseInt(index)  + 1\n      if (questions[`${index}`].question.length === 0) unfilled.push(`Question ${questionNumber}`)\n      if (questions[`${index}`].correctAnswer.length === 0)  unfilled.push(`Correct Answer (Question ${questionNumber})`)\n      if (questions[`${index}`].wrongAnswer1.length === 0) unfilled.push(`Wrong Answer 1 (Question ${questionNumber})`)\n      if (questions[`${index}`].wrongAnswer2.length === 0) unfilled.push(`Wrong Answer 2 (Question ${questionNumber})`)\n      if (questions[`${index}`].wrongAnswer3.length === 0) unfilled.push(`Wrong Answer 3 (Question ${questionNumber})`)\n      if (questions[`${index}`].wrongAnswer1.toLowerCase() === 'n/a' && questions[`${index}`].wrongAnswer2.toLowerCase() === 'n/a' && questions[`${index}`].wrongAnswer3.toLowerCase() === 'n/a') {\n        wrongInput = true;\n      }\n    })\n\n    if(unfilled.length === 0 && !wrongInput){\n        createQuiz(title, Object.values(questions)).then(response =>{\n          let newObject = Object.assign({},newQuiz)\n          newObject.boolean = true; \n          newObject.id = response\n          setTimeout(setNewQuiz(newObject),500)\n        }).catch(error => {\n            console.log('error from the server side', error)\n            alert('An error occurred with our servers. Please try submitting your quiz at a later time.')}\n            )\n        return\n    }\n    let alertString = ''\n\n    if (unfilled.length > 0){\n      alertString += 'Please fill out the following inputs: ';\n      unfilled.forEach((input,i) =>{\n        alertString += input \n        if (i + 1 < unfilled.length){\n          alertString += ', '\n        }\n      })   \n    } \n\n    if (wrongInput){\n      alertString += \"\\n \\n Please note that you cannot use 'n/a' as an answer choice for all of a question's wrong answers\"\n    }\n\n    alert(alertString)\n\n  }\n\n  function handleRedirect(){\n    if(newQuiz.boolean){\n      return <Redirect to={{pathname:`/quiz/${newQuiz.id}`,state:{justCreated:true}}}/>\n    }\n  }\n\n  questionForm = Object.values(questions).map((question, i) =>{\n    return (\n      <div key={i} className=\"create-question-holder\">\n        {handleRedirect()}\n        <div><p>Question {i + 1}: </p><input onChange={(e) =>handleChange(e,\"question\", i)} placeholder={question.question}/><div id={`${i}question`} className=\"counter2\">0/150</div></div>\n        <div><p>Correct Answer: </p><input onChange={(e) =>handleChange(e,\"correctAnswer\", i)} placeholder={question.correctAnswer}/><div id={`${i}correctAnswer`} className=\"counter2\">0/100</div></div>\n        <div><p>Wrong Answer 1: </p><input onChange={(e) =>handleChange(e,\"wrongAnswer1\", i)} placeholder={question.wrongAnswer}/><div id={`${i}wrongAnswer1`} className=\"counter2\">0/100</div></div>\n        <div><p>Wrong Answer 2: </p><input onChange={(e) =>handleChange(e,\"wrongAnswer2\", i)} placeholder={question.wrongAnswer}/><div id={`${i}wrongAnswer2`} className=\"counter2\">0/100</div></div>\n        <div><p>Wrong Answer 3: </p><input onChange={(e) =>handleChange(e,\"wrongAnswer3\", i)} placeholder={question.wrongAnswer}/><div id={`${i}wrongAnswer3`} className=\"counter2\">0/100</div></div>\n        <br/>\n        <br/>\n      </div>\n\n    );\n  })\n\n\n  return (  \n    <div className=\"page-holder\">\n      <div className=\"quiz-form\">\n        <h1>Create Your Quiz!</h1>\n        <span>Title: </span><input onChange={(e) => handleChange(e, \"title\")}/><div id=\"title\" className=\"counter\">0/22</div>\n        <p>Questions:</p>\n        <div className=\"instructions\">Please fill out all of the below inputs. If you would like to use less than four answer choices for any of your questions, enter \"n/a\" for the corresponding wrong answer. Each question must have at least two answer choices</div>\n        <br/>\n        <br/>\n        {questionForm}\n        <div className=\"icon-holder\">\n          <FontAwesomeIcon className={ index < 2 ? \"remove2\" : \"remove\"} onClick={(e) => removeQuestion(e)} icon={faMinus} size=\"3x\" />\n          <FontAwesomeIcon className={ index > 8 ? \"add2\" : \"add\"} onClick={(e) => addQuestion(e)} icon={faPlus} size=\"3x\" />\n        </div>\n        <button onClick={(e) => handleSubmit(e)} className=\"submit\">Submit</button>\n      </div>\n    </div>\n  );    \n}","import React,{ useState, useRef, useEffect } from 'react';\nimport '../style/scorepage.css'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getQuestions, addQuiz  } from '../app/quizesSlice.js'\nimport {gradeQuiz} from '../utility/util'\nimport {Redirect} from \"react-router-dom\";\nimport '../style/createpage.css'\nimport '../style/testpage.css'\nimport {scoreQuiz} from '../utility/quizMethods'\n\n\nexport default function TestPage() {\n    const dispatch = useDispatch();\n    let quizId = window.location.href.split('/')[4].split('?')[0]\n    const onLoad = useRef(true)\n    const [name, setName] = useState('')\n    const [attempts, setAttempts] = useState({})\n    const [quizSubmitted, setQuizSubmitted] = useState({boolean: false, scoreId:''})\n    let questionList\n\n    const quiz = useSelector(state => {\n      if(state.quizes[`${quizId}`])\n        return state.quizes[`${quizId}`]\n        else{\n          return {}\n        }\n    })\n\n    function handleSubmit()  {\n      let unfilled = []\n      if (name.length === 0) unfilled.push('Please enter your name before submitting your answers')\n      if (Object.keys(questionList).length !== Object.keys(attempts).length) unfilled.push('Please answer all of the questions before submitting your answers')\n  \n      if(unfilled.length === 0){\n       scoreQuiz(Object.values(attempts),{score:gradeQuiz(quiz.questions, attempts),testTaker:name, quiz:quiz})\n       .then(response => {\n         let newObject = Object.assign({}, quizSubmitted)\n         newObject.scoreId = response.score_id \n         newObject.boolean = true\n         console.log('quiz being sent to dispatch on test submit', response.quiz)\n         dispatch(addQuiz(response.quiz))\n        setTimeout(setQuizSubmitted(newObject),500)\n       })\n       .catch((error) =>{\n        console.log(error)\n        alert('An error occurred with our servers. Please try submitting your answers at a later time.')\n       })\n        return\n      }\n      let alertString = ''\n  \n      if (unfilled.length > 0){\n        unfilled.forEach((input,i) =>{\n          alertString += \"\\n\"\n          alertString += input \n        })   \n      } \n      alert(alertString)\n  \n    }\n\n    function handleChange(e){\n  \n      let value = e.currentTarget.value \n      if (value.length === 0) value = ''\n   \n      if(value.length > 8){\n        e.currentTarget.value = name \n        return\n      }\n      let counter = document.getElementById('name')\n      counter.innerHTML = value.length.toString() + \"/8\"\n      setName(value)\n      return\n    }\n\n    function handleSelect( key, answer){\n      let newObject = Object.assign({}, attempts)\n      newObject[`${key}`] = {questionId:key,answer:answer}\n      setAttempts(newObject)\n    }\n\n    function handleRedirect(){\n      if(quizSubmitted.boolean){\n        return <Redirect to={{pathname:`/score/${quizSubmitted.scoreId}?quiz=${quizId}`,state:{justScored:true,score:gradeQuiz(quiz.questions, attempts)}}}/>\n      }\n    }\n\n\n    useEffect(() => {\n      if(onLoad.current){\n        dispatch(getQuestions(quizId))\n        onLoad.current = false;\n      }\n    },[dispatch,quizId]);\n\n    if(quiz && quiz.questions){\n      questionList = Object.keys(quiz.test_questions).map((key,i) =>{\n        let question = quiz.test_questions[`${key}`]\n        return (\n          <div key={i} className=\"question-holder question-margin\">\n            <div className=\"question\">\n                <div>Question {i + 1}: {question.question}</div>\n            </div>\n              <div className={question.answer_1.toLowerCase() !== 'n/a' ? \"\" : \"no-display\" }><input onChange={(e) => handleSelect(key, question.answer_1)} type=\"radio\" name={question.id} /><label>{question.answer_1}</label></div>\n              <div className={question.answer_2.toLowerCase() !== 'n/a' ? \"\" : \"no-display\" }><input onChange={(e) => handleSelect(key, question.answer_2)} type=\"radio\" name={question.id} /><label>{question.answer_2}</label></div>\n              <div className={question.answer_3.toLowerCase() !== 'n/a' ? \"\" : \"no-display\" }><input onChange={(e) => handleSelect(key, question.answer_3)} type=\"radio\" name={question.id} /><label>{question.answer_3}</label></div>\n              <div className={question.answer_4.toLowerCase() !== 'n/a' ? \"\" : \"no-display\" }><input onChange={(e) => handleSelect(key, question.answer_4)} type=\"radio\" name={question.id} /><label>{question.answer_4}</label></div>\n          \n          </div>\n        );\n\n      });\n    }\n\n\n\n  return (\n  \n<div className=\"page-holder\">\n      <div className=\"page-top-section\">\n      <div className=\"pokeball\"></div>\n          <div className=\"page-top-right\">\n            <div className=\"test-title\"><div>{quiz.title}</div></div>\n          </div>\n          <div className=\"pokeball2\"></div>\n      </div>\n      <div className=\"questions test-questions\">\n        <span>Name: </span><input className=\"name-input\" onChange={(e) => handleChange(e)} /><div id=\"name\" className=\"name-counter\">0/8</div>\n        <div className=\"result-title\">Questions</div>\n        {questionList}\n        <button onClick={(e) => handleSubmit(e)} className=\"submit test-submit\">Submit</button>\n        {handleRedirect()}\n      </div>\n</div>\n  );    \n}","import React from 'react';\r\nimport './style/App.css';\r\nimport QuizList from './components/QuizList'\r\nimport Nav from './components/Nav'\r\nimport QuizPage from './components/QuizPage'\r\nimport ScorePage from './components/ScorePage'\r\nimport CreatePage from './components/CreatePage'\r\nimport TestPage from './components/TestPage'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <Nav/>\r\n      <Switch>\r\n        <Route path=\"/create\">\r\n          <CreatePage/>\r\n        </Route>\r\n        <Route path=\"/test/:id\">\r\n          <TestPage/>\r\n        </Route>\r\n        <Route path=\"/quiz/:id\">\r\n          <QuizPage/>\r\n        </Route>\r\n        <Route path=\"/score/:id\">\r\n          <ScorePage/>\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <QuizList/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport quizesReducer from './quizesSlice'\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n      quizes: quizesReducer,\r\n    },\r\n  });\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}